version: "2.2"

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - desweb
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 6

  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
          condition: service_healthy
    networks:
      - desweb

  app:
    container_name: backend
    build: .
    env_file:
      - .env
    command: npm start
    ports:
      - "8080:8080"
    volumes:
      - .:/usr/app
      - /usr/app/node_modules
    networks:
      - desweb
    depends_on:
      elasticsearch:
          condition: service_healthy

  mysql:
    image: mysql
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    security_opt:
      - seccomp:unconfined
    volumes:
      - ./src/config/db:/docker-entrypoint-initdb.d
    networks:
      - desweb

volumes:
  esdata1:
    driver: local

networks:
  desweb:
    driver: bridge
